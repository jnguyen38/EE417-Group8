/*
    This is my root file, it contains all or most of my global or more general css classes, including
    Breakpoint.css and Spacing.css. It is divided and organized into multiple sections that I go into more
    detail about below.
    Imports, :root, Links, Text, Buttons, Flexbox, Grid, Line, Icons, General and Fonts
*/

@import "components/Spacing.css";

/* Root Classes
    The :root selector contains theme colors and styling sizes in order to maintain a sense of uniformity
    to the page. For example, if I wanted to change the entire page color scheme, then I only have to change
    the value of one variable then all elements using that color will change.

    Usage example:
    .nav-item {
        background-color: var(--theme-white);
     }
*/
:root {
    --theme-black: #333333;
    --theme-white: #ffffff;
    --theme-orange: #E0A15C;
    --form-bg: #fdf9ed;
    --theme-blue: #03989E;
    --theme-blue-transparent: #03989ECC;
    --theme-blue-overlay: #03989E33;
    --theme-blue-hover: #03858a;
    --warning-bg: #fdefef;
    --warning-text: #fd0001;
    --border-radius: 5px;
    --header-height: 65px;
}

.relative {
    position: relative;
}

body {
    margin: 0;
    font-family: "Outfit", "Yellowtail", -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',
    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',
    sans-serif;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

code {
    font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',
    monospace;
}

h1, h2, h3, h4, h5, h6, p {
    margin: 0;
    font-family: Outfit, sans-serif;
    font-weight: 300;
}

/* Link Classes
    Links should not be decorated or change in color.
*/
a {text-decoration: none;}
a:visited {text-decoration: none;}
a:active { text-decoration: none; }
a:link { text-decoration: none; }

/* Text Classes
    Text classes include changing font weights or font sizes as well as text alignment
    and styling such as underlining or italicizing.
*/

.fw-1 {font-weight: 100;}
.fw-2 {font-weight: 200;}
.fw-3 {font-weight: 300;}
.fw-4 {font-weight: 400;}
.fw-5 {font-weight: 500;}
.fw-6 {font-weight: 600;}
.fw-7 {font-weight: 700;}
.fw-8 {font-weight: 800;}
.fw-9 {font-weight: 900;}

.fs-xs {font-size: .8em;}
.fs-eh {font-size: 1.1em;}
.fs-sm {font-size: 1.2em;}
.fs-smd {font-size: 1.5em;}
.fs-md {font-size: 1.8em;}
.fs-lg {font-size: 2.2em;}
.fs-xl {font-size: 2.6em;}

.text-left {text-align: left;}
.text-right {text-align: right;}
.text-center {text-align: center;}

.underline {text-decoration: underline !important;}
.italic {font-style: italic}

/* Button Classes
    Button classes are more general classes that dictate mouse behavior over
    buttons. These can also be used for any html element tag if you don't want the element to
    be selectable or if you want it to be clickable.
*/

.clickable {cursor: pointer}
.no-select {
    -webkit-touch-callout: none; /* iOS Safari */
    -webkit-user-select: none; /* Safari */
    -moz-user-select: none; /* Old versions of Firefox */
    -ms-user-select: none; /* Internet Explorer/Edge */
    user-select: none; /* Chrome, Edge, Opera and Firefox */
}

/* Flexbox Classes
    Flexbox is my main method of organizing and shifting the layout of my html pages. Therefore, these classes
    are most important to me. They allow me to change the display and flex options of any html element from the html class
    property. Therefore, they shorten my css code and improve my productivity significantly.

    Options include changing the element to flex, changing justify-content, changing align-self, or presetting
    the element to common combinations of
*/

.d-none {display: none !important;}
.d-flex {display: flex; align-items: center;}
.f-wrap {flex-wrap: wrap;}
.f-col {flex-direction: column;}
.jc-sb {justify-content: space-between;}
.jc-sa {justify-content: space-around;}
.jc-fs {justify-content: flex-start;}
.jc-fe {justify-content: flex-end;}
.jc-c {justify-content: center;}
.as-c {align-self: center;}
.as-fs {align-self: flex-start;}
.as-fe {align-self: flex-end;}

.d-flex-row-l {
    display: flex;
    align-items: center;
    justify-content: flex-start;
}

.d-flex-row-c {
    display: flex;
    align-items: center;
    justify-content: center;
}

.d-flex-col-l {
    display: flex;
    justify-content: center;
    align-items: flex-start;
    flex-direction: column;
}

.d-flex-col-c {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
}

.f-responsive-row {
    display: flex;
    align-items: center;
    gap: 20px;
    flex-wrap: wrap;
}

/* Grid Classes
    I don't use grid displays as often, but these classes come in handy when I choose to
    do so.
*/

.d-grid {display: grid;}
.grid-col-12 {grid-template-columns: repeat(12, 1fr);}
.grid-4 {grid-column: span 4;}
.grid-6 {grid-column: span 6;}
.grid-8 {grid-column: span 8;}
.grid-12 {grid-column: span 12;}

/* Line Classes
    These classes can be used to create lines on the screen for an extra aesthetic
    effect for some layouts. Line options that can be changed include the thicknes, the length
    or the color.
*/

.line {
    width: 50px;
    height: 2px;
    margin: 6px 0;
}

.thick {height: 5px !important;}
.thin {height: 1px !important;}
.full-width {width: 100% !important;}
.white {background-color: var(--theme-white)}
.white-text {color: var(--theme-white)}
.black {background-color: var(--theme-black)}
.black-text {color: var(--theme-black)}
.blue {background-color: var(--theme-blue)}
.blue-text {color: var(--theme-blue) !important}
.blue-trans-bg {background-color: var(--theme-blue-transparent)}

.fill {
    width: 100%;
    height: 100%;
}

.fs-buffer {
    height: 100vh;
    width: 80%;
}

.container {
    min-height: 100vh;
}

.container-80 {
    min-height: 70vh;
}

/* Icon Classes
    For SVG file formats, these icon classes can change the color via the CSS filter attribute.
    These classes can also help change the size of icons based on their use case.
*/

.icon {
    filter: var(--icon-filter);
    margin-right: 5px;
}

.dark-blue-icon {filter: invert(10%) sepia(34%) saturate(2988%) hue-rotate(194deg) brightness(88%) contrast(96%)}
.light-blue-icon {filter: invert(39%) sepia(27%) saturate(540%) hue-rotate(153deg) brightness(96%) contrast(86%);}
.warning-icon {filter: invert(18%) sepia(28%) saturate(6256%) hue-rotate(336deg) brightness(87%) contrast(108%);}
.white-icon {--icon-filter: invert(100%) sepia(2%) saturate(5756%) hue-rotate(298deg) brightness(103%) contrast(89%) !important;}
.xxs-icon {width: 18px;}
.xs-icon {width: 22px;}
.sm-icon {width: 26px;}
.md-icon {width: 32px;}
.lg-icon {width: 40px;}
.xl-icon {width: 48px;}

.map-overlay {
    width: 100%;
    min-height: 80vh;
    padding: calc(var(--header-height) * 1.5) 0;
    background-color: var(--theme-blue-overlay);
}


/*noinspection CssUnknownTarget*/
.map-bg {
    background-image: url("/public/media/ND_map_bw.png");
}

.rounded {
    border-radius: var(--border-radius);
}

.controlled-width {
    max-width: min(100%, 700px);
}

@font-face {
    font-family: Outfit;
    font-weight: 100 900;
    src: url("./fonts/Outfit/Outfit-VariableFont_wght.ttf") format("truetype");
}

@font-face {
    font-family: Yellowtail;
    src: url("./fonts/Yellowtail/Yellowtail-Regular.ttf") format("truetype");
}
